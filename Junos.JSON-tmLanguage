{ "name": "Junos",
  "scopeName": "text.junos",
  "fileTypes": ["conf", "conf.1", "conf.2", "conf.3", "conf.4",
      "conf.5", "conf.6", "conf.7", "conf.8", "conf.9",
      "conf.10", "conf.11", "conf.12", "conf.13", "conf.14",
      "conf.15", "conf.16", "conf.17", "conf.18", "conf.19",
      "conf.20", "conf.21", "conf.22", "conf.23", "conf.24",
      "conf.25", "conf.26", "conf.27", "conf.28", "conf.29",
      "conf.30", "conf.31", "conf.32", "conf.33", "conf.34",
      "conf.35", "conf.36", "conf.37", "conf.38", "conf.39",
      "conf.40", "conf.41", "conf.42", "conf.43", "conf.44",
      "conf.45", "conf.46", "conf.47", "conf.48", "conf.49"
    ],
  "patterns": [
    {
      "comment": "Block Comment or annotation",
      "name": "comment.block.junos",
      "begin": "/\\*", 
      "end": "(\\*/|\n)", 
      "captures": {
        "0": { "name": "comment.block.junos" }
      }
    },
    {
      "comment": "Line comment (anything following a hashtag (#)",
      "name": "comment.line.number-sign.junos",
      "match": "(^|^\\s|\\s)(#).*$\n?", 
      "captures": {
        "2": { "name": "punctuation.definition.comment.junos" }
      }
    },
    {
      "comment": "Major sections of the configuration",
      "match": "(?:^(\\s)*)((set )|(request )|(delete )|(edit )|(show )|(protect )|(protect: )|(inactive: )|(unprotect )|(deactivate )|(activate ))?(system|vlans|forwarding-options|routing-options|bridge-domains|interfaces|groups|snmp|poe|routing-instances|ethernet-switching-options|security)(?=[ \n])",
      "captures": {
        "3": { "name": "keyword.control.junos" },
        "4": { "name": "keyword.control.junos" },
        "5": { "name": "keyword.control.junos" },
        "6": { "name": "keyword.control.junos" },
        "7": { "name": "keyword.control.junos" },
        "8": { "name": "keyword.control.junos" },
        "9": { "name": "keyword.control.junos" },
        "10": { "name": "keyword.control.junos" },
        "11": { "name": "keyword.control.junos" },
        "12": { "name": "keyword.control.junos" },
        "13": { "name": "keyword.control.junos" },
        "14": { "name": "entity.name.function.junos" }
      }
    },
    {
      "comment": "minor sections of the config.",
      "match": "(?:^(\\s)*)((set )|(request )|(delete )|(edit )|(show )|(protect )|(protect: )|(inactive: )|(unprotect )|(deactivate )|(activate ))?(policy-options|apply-groups|protocols|chassis|firewall|applications|multi-chassis|redundant-power-system|services|virtual-chassis|event-options|class-of-service|access|access-profile|accounting-options|diameter|dynamic-profiles|fabric|jsrc|jsrc-partition|logical-systems|multicast-snooping-options|switch-options|wlan|smtp|schedulers)(?=[ \n])",
      "captures": {
        "3": { "name": "keyword.control.junos" },
        "4": { "name": "keyword.control.junos" },
        "5": { "name": "keyword.control.junos" },
        "6": { "name": "keyword.control.junos" },
        "7": { "name": "keyword.control.junos" },
        "8": { "name": "keyword.control.junos" },
        "9": { "name": "keyword.control.junos" },
        "10": { "name": "keyword.control.junos" },
        "11": { "name": "keyword.control.junos" },
        "12": { "name": "keyword.control.junos" },
        "13": { "name": "keyword.control.junos" },
        "14": { "name": "entity.name.function.junos" }
      }
    },
    {
      "comment": "Interface names",
      "name": "support.class.junos",
      "match": "\\b(((((ge-|et-|so-|fe-|gr-|xe-|lt-|vt-|si-|sp-)(\\d+\/\\d+\/\\d+))|st\\d+|lo\\d+|me\\d+|vme\\d+|ae\\d+|irb)(\\.\\d+)?)|((vlan\\.\\d+)))\\b"
    },
    {
      "comment": "IP addresses, with or without a mask",
      "name": "constant.numeric.integer.long.octal.junos",
      "match": "\\b((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))([/]\\d{1,2})?\\b"
    },
    {
      "comment": "IPv6 Addresses. This will not fully validate the structure of the IP, so some invalid IPv6 addresses might be false positives. IPv6 addresses themselves should be validated by running commands against a device.",
      "name": "constant.numeric.integer.long.octal.junos",
      "match": "(\\b|^)((?=.*::)(?!.*::.+::)(::)?([\\dA-Fa-f]{1,4}:(:|\\b)|){5}|([\\dA-Fa-f]{1,4}:){6})((([\\dA-Fa-f]{1,4}((?!\\4)::|:\\b|[/]\\d+|$))|(?!\\3\\4)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})([/]\\d{1,3})?"
    },
    {
      "comment": "MAC Addresses identified as a number",
      "name": "constant.numeric.integer.long.octal.junos",
      "match": "(?:(\\b))([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})([/]\\d{1,2})?\\b"
    },
    {
      "comment": "Unit numbers, port numbers, etc",
      "match": "(?:\\s(?:unit|destination-port|source-port)[ ])((\\d|[-])+)([;]|$|\\b)",
      "captures": {
        "1": { "name": "constant.numeric.integer.long.octal.junos" }
      }
    },
    {
      "comment": "URL Addresses, either matching character URL patterns, or http(s):// followed by an IPv4 address. ",
      "name": "keyword.operator.junos",
      "match": "\\b((https?:\/\/)|(scp:\/\/)|((s?|t?)ftp:\/\/))?((([\\da-zA-Z\\.-]+)\\.([A-Za-z\\.]{2,6}))|(\\b((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\b))(([\/\\w\\.&?=-]*)*)\/?"
    },
    {
      "comment": "User defined arbitrary names (such as filters, policy names, prefix-lists, etc)",
      "match": "(?:\\s(?:logical-systems|source-prefix-list|group|mime-pattern|url-pattern|custom-url-category|profile|url-whitelist|url-blacklist|ca-profile|idp-policy|active-policy|interface-set|count|destination-prefix-list|import|export|instance|utm-policy|ids-option|next-hop-group|routing-instances|rule|rule-set|pool|class|unit|port-mirror-instance|from-zone|to-zone|apply-groups|file|host-name|domain-name|community|trap-group|policy|policy-statement|filter|prefix-list|proposal|address-set|scheduler|security-zone|term|application|application-set|vlans|gateway|user|policer)[ ])((\\w|[-_<>:\\./])+)([;]|$|\\b)",
      "captures": {
        "1": { "name": "variable.language.junos" }
      }
    },
    {
      "comment": "Double quoted strings",
      "name": "string.quoted.double.junos",
      "begin": "\"", 
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.junos" }
      }, 
      "end": "\"", 
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.junos" }
      },
      "patterns": [
        { "name": "constant.character.escape.junos",
          "match": "\\\\."
        }
      ]
    }, 
    { 
      "comment": "Single quoted strings",
      "name": "string.quoted.single.junos",
      "begin": "'",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.junos" }
      },
      "end": "'",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.junos" }
      },
      "patterns": [
        { "name": "constant.character.escape.junos",
          "match": "\\\\."
        }
      ]
    },
    { 
      "comment": "Descriptions should always look like strings, even if no quotations are needed",
      "match": "(?:\\s(?:description)[ ])((\\w|[-_<>:\\./])+)([;]|$|\\b)",
      "captures": {
        "1": { "name": "string.quoted.double.junos" }
      }
    }
  ],
  "uuid": "a24afbf3-0a1e-4795-87c3-7bb7e582bffe"
}